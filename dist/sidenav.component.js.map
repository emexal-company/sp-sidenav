{"version":3,"file":"sidenav.component.js","sourceRoot":"","sources":["../src/sidenav.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { query, css, customElement, LitElement, property, PropertyValues } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport sidenavStyles from './sidenav.styles';\r\nimport template from './sidenav.template';\r\nimport { SideNavItem } from '@spectrum/sp-sidenavitem';\r\n\r\n@customElement('sp-sidenav')\r\nexport class SideNav extends Base {\r\n  public static componentStyles = [sidenavStyles];\r\n\r\n  @property({ type: Boolean, attribute: 'multi-level' }) public multiLevel: boolean = false;\r\n  @property({ type: Boolean, attribute: 'first-level' }) public firstLevel: boolean = false;\r\n  @property({ type: Boolean, attribute: 'second-level' }) public secondLevel: boolean = false;\r\n\r\n  @query('slot') protected items!: HTMLElement;\r\n\r\n  private selectedElement: SideNavItem;\r\n\r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n\r\n  protected connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // Handle the click event only inside the root <sp-sidenav>\r\n    if (!((this as any as HTMLElement).parentNode instanceof SideNavItem)) {\r\n      (this as any as HTMLElement).addEventListener('click', this.onClicked.bind(this));\r\n    }\r\n  }\r\n\r\n  protected disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    if (!((this as any as HTMLElement).parentNode instanceof SideNavItem)) {\r\n      (this as any as HTMLElement).removeEventListener('click', this.onClicked.bind(this));\r\n    }\r\n  }\r\n\r\n  protected updated() {\r\n    const items = this.getItems();\r\n    items.forEach((item) => {\r\n      item.multiLevel = this.multiLevel;\r\n      item.secondLevel = this.secondLevel;\r\n      item.firstLevel = this.firstLevel;\r\n    });\r\n  }\r\n\r\n  private getItems(): SideNavItem[] {\r\n    return (this.items as HTMLSlotElement)\r\n      .assignedNodes({ flatten: true })\r\n      .filter((e: Node) => e instanceof SideNavItem) as any as SideNavItem[];\r\n  }\r\n\r\n  private onClicked(e: MouseEvent) {\r\n    // Find the <sp-sidenav> items\r\n    const items = e.composedPath().filter((t: EventTarget) => t instanceof SideNavItem) as any as SideNavItem[];\r\n    if (items.length > 0) {\r\n      //e.stopPropagation();\r\n\r\n      // Remove selection from the previously selected element\r\n      if (this.selectedElement) {\r\n        this.selectedElement.selected = false;\r\n      }\r\n\r\n      // Select the new clicked element\r\n      this.selectedElement = items[0];\r\n      this.selectedElement.selected = true;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-sidenav': SideNav;\r\n  }\r\n}\r\n"]}